// <auto-generated />
using System;
using AssetManagement.Api.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetManagement.Api.Migrations
{
    [DbContext(typeof(AssetManagementContext))]
    partial class AssetManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("AssetManagement.Api.Data.Entities.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetTag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ManufacturedYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("PurchasedFrom")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("WarrantyExpiration")
                        .HasColumnType("datetime");

                    b.HasKey("AssetId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetManagement.Api.Data.Entities.AssetAssignment", b =>
                {
                    b.Property<int>("AssetAssignmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Term")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssetAssignmentsId");

                    b.HasIndex("AssetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AssetAssignment");
                });

            modelBuilder.Entity("AssetManagement.Api.Data.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .IsFixedLength(true)
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AssetManagement.Api.Data.Entities.AssetAssignment", b =>
                {
                    b.HasOne("AssetManagement.Api.Data.Entities.Asset", "Asset")
                        .WithMany("AssetAssignments")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetAssignments_Assets")
                        .IsRequired();

                    b.HasOne("AssetManagement.Api.Data.Entities.Employee", "Employee")
                        .WithMany("AssetAssignments")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_AssetAssignments_Employees")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
